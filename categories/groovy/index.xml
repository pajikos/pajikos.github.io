<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>groovy - Category - blog.pavelsklenar.com</title><link>https://blog.pavelsklenar.com/categories/groovy/</link><description>groovy - Category - blog.pavelsklenar.com</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sklenar.pav@gmail.com (Pavel Sklenar)</managingEditor><webMaster>sklenar.pav@gmail.com (Pavel Sklenar)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 01 Jan 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.pavelsklenar.com/categories/groovy/" rel="self" type="application/rss+xml"/><item><title>Jenkins - Creating Dynamic Project Folders with Job DSL</title><link>https://blog.pavelsklenar.com/jenkins-creating-dynamic-project-folders-with-job-dsl/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><author>sklenar.pav@gmail.com</author><dc:creator>Pavel Sklenar</dc:creator><guid>https://blog.pavelsklenar.com/jenkins-creating-dynamic-project-folders-with-job-dsl/</guid><description>This post is about the dynamic creating of project folders in Jenkins using Job DSL Plugin. The newly created project folders will be accessible by a specific group or user only, so you are able to use your Jenkins instance by multiple teams and each team will have their own folder for their projects.
Before we can start, the following plugins must be installed:
Matrix Authorization Strategy Job DSL Plugin Setting Up Correct Authorization Type The first step is related to set up a correct authorization type in the Configure Global Security menu:</description></item><item><title>How To Create Maven Dependencies using DSL in Groovy</title><link>https://blog.pavelsklenar.com/how-to-create-maven-dependencies-using-dsl-in-groovy/</link><pubDate>Fri, 04 Sep 2015 00:00:00 +0000</pubDate><author>sklenar.pav@gmail.com</author><dc:creator>Pavel Sklenar</dc:creator><guid>https://blog.pavelsklenar.com/how-to-create-maven-dependencies-using-dsl-in-groovy/</guid><description>This post shows how to create Maven&amp;rsquo;s dependency elements (used in pom.xml file) programmatically, using DSL (Domain-Specific Language).
You may find it useful, when you need to convert e.g. an old Java project (with dozens of required dependency jar files in one folder) into Maven project, i.e. create a new pom.xml file with all necessary dependency elements.
Of cause, it exists a lot of different ways how to do it, but I solved this task using dynamic nature of Groovy and its metaprogramming capabilities, which makes it attractive for building DSLs.</description></item><item><title>Simple Groovy Logger Without Any Logging Framework</title><link>https://blog.pavelsklenar.com/simple-groovy-logger-without-any-logging-framework/</link><pubDate>Thu, 23 Jul 2015 00:00:00 +0000</pubDate><author>sklenar.pav@gmail.com</author><dc:creator>Pavel Sklenar</dc:creator><guid>https://blog.pavelsklenar.com/simple-groovy-logger-without-any-logging-framework/</guid><description>If you need to use a simple logging in your Groovy script you can use some existing and supported frameworks.
Sometimes you do not want or cannot use any other dependencies in your script, so you can write your own simple logger usingÂ methodMissing implementation:
/** * Possibility to log TRACE, DEBUG, INFO, WARN and ERROR levels * Simply call methods like info, debug etc. (case insensitive) * Possibility to set/change: * * logFile - location of a log file (default value:default.</description></item></channel></rss>