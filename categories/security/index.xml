<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>security - Category - blog.pavelsklenar.com</title><link>https://blog.pavelsklenar.com/categories/security/</link><description>security - Category - blog.pavelsklenar.com</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sklenar.pav@gmail.com (Pavel Sklenar)</managingEditor><webMaster>sklenar.pav@gmail.com (Pavel Sklenar)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 27 Feb 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.pavelsklenar.com/categories/security/" rel="self" type="application/rss+xml"/><item><title>Vulnerability Scan as part of Continuous Integration</title><link>https://blog.pavelsklenar.com/vulnerability-scan-as-part-of-continuous-integration/</link><pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate><author>sklenar.pav@gmail.com</author><dc:creator>Pavel Sklenar</dc:creator><guid>https://blog.pavelsklenar.com/vulnerability-scan-as-part-of-continuous-integration/</guid><description>Have you ever image how many vulnerabilities exist in your applications since it was created? And how many of them comes from its dependencies?
The high secure environments require to perform regularly checks to discover any new vulnerability issue in your application. These checks can be done manually, but it may take a lot of time, especially if you are using the current frameworks (e.g. Spring Boot) with many and many transitive dependencies.</description></item><item><title>How To Create PKCS #12 For Your Application</title><link>https://blog.pavelsklenar.com/how-to-create-pkcs-12-for-your-application/</link><pubDate>Sat, 18 Aug 2018 00:00:00 +0000</pubDate><author>sklenar.pav@gmail.com</author><dc:creator>Pavel Sklenar</dc:creator><guid>https://blog.pavelsklenar.com/how-to-create-pkcs-12-for-your-application/</guid><description>This post is about creating PKCS #12 to serve e.g. your content via HTTPS in your application itself or in another web container (such a Tomcat or another application server).
The PKCS #12 format is a binary format for storing cryptography objects. It usually contains the server certificate, any intermediate certificates (i.e. chain of trust), and the private key, all of them in a single file. A PKCS #12 file may be encrypted and signed.</description></item></channel></rss>