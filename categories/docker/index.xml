<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>docker - Category - blog.pavelsklenar.com</title><link>https://blog.pavelsklenar.com/categories/docker/</link><description>docker - Category - blog.pavelsklenar.com</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sklenar.pav@gmail.com (Pavel Sklenar)</managingEditor><webMaster>sklenar.pav@gmail.com (Pavel Sklenar)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 16 Dec 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.pavelsklenar.com/categories/docker/" rel="self" type="application/rss+xml"/><item><title>Spring Boot: Run and Build in Docker</title><link>https://blog.pavelsklenar.com/spring-boot-run-and-build-in-docker/</link><pubDate>Sun, 16 Dec 2018 00:00:00 +0000</pubDate><author>sklenar.pav@gmail.com</author><dc:creator>Pavel Sklenar</dc:creator><guid>https://blog.pavelsklenar.com/spring-boot-run-and-build-in-docker/</guid><description>It exists many “Docker for Java developers” guides, but most of them does not take care of small and efficient Docker images.
I have combined many resources how to make a simple and fast Docker image containing any of Spring Boot like application.
My goals:
Create a single and portable Dockerfile (as general as possible). Make Maven build inside Docker (no need to have Maven locally). Don&amp;rsquo;t download any Maven dependencies repeatedly, if no changes in pom.</description></item><item><title>How to Run Application in Docker on Synology</title><link>https://blog.pavelsklenar.com/how-to-run-application-in-docker-on-synology/</link><pubDate>Sat, 08 Aug 2015 00:00:00 +0000</pubDate><author>sklenar.pav@gmail.com</author><dc:creator>Pavel Sklenar</dc:creator><guid>https://blog.pavelsklenar.com/how-to-run-application-in-docker-on-synology/</guid><description>When you want to run your application in Docker on Synology you are not allowed to use all of the available parameters of the docker run command. Check my other post about basics with Docker on Synology which contains an enumeration of all possible parameters.
Basically, you have two options how to run your application in Docker.
Create your own original dockerfile including your application and build your new image.</description></item><item><title>How to install and use Docker on Synology</title><link>https://blog.pavelsklenar.com/how-to-install-and-use-docker-on-synology/</link><pubDate>Fri, 24 Jul 2015 00:00:00 +0000</pubDate><author>sklenar.pav@gmail.com</author><dc:creator>Pavel Sklenar</dc:creator><guid>https://blog.pavelsklenar.com/how-to-install-and-use-docker-on-synology/</guid><description>Installation Simply find and install a Docker application from the Synology Package Center.
Note: If you do not find the application in your Package Center, your Synology is most probably not supported yet:
Due to the hardware requirement, Docker will be only available on the following models: 18 series: DS3018xs, DS918+, DS718+, DS218+ 17 series: FS3017, FS2017, RS18017xs+, RS4017xs+, RS3617xs+, RS3617xs, RS3617RPxs, DS3617xs, DS1817+, DS1517+ 16 series: RS18016xs+, RS2416+, RS2416RP+, DS916+, DS716+II, DS716+, DS216+II, DS216+ 15-series: RC18015xs+, DS3615xs, DS2415+, DS1815+, DS1515+, RS815RP+, RS815+, DS415+ 14-series: RS3614xs+, RS3614xs, RS3614RPxs, RS2414RP+, RS2414+, RS814RP+, RS814+ 13-series: DS2413+, RS3413xs+, RS10613xs+, DS1813+, DS1513+, DS713+ 12-series: DS3612xs, RS3412xs, RS3412RPxs, RS2212RP+, RS2212+, DS1812+, DS1512+, RS812RP+, RS812+, DS412+, DS712+ 11-series: DS3611xs, DS2411+, RS3411xs, RS3411RPxs, RS2211RP+, RS2211+, DS1511+, DS411+II, DS411+ 10-series: DS1010+, RS810RP+, RS810+, DS710+(source, last updated 09-29-2017)</description></item><item><title>5 Useful Docker Tips and Tricks on Windows</title><link>https://blog.pavelsklenar.com/5-useful-docker-tip-and-tricks-on-windows/</link><pubDate>Wed, 15 Jul 2015 00:00:00 +0000</pubDate><author>sklenar.pav@gmail.com</author><dc:creator>Pavel Sklenar</dc:creator><guid>https://blog.pavelsklenar.com/5-useful-docker-tip-and-tricks-on-windows/</guid><description>UPDATED: Docker deprecates the Boot2Docker command line in favor of Docker Machine. All Tips and Tricks were updated to reflect this change.
Edit etc/hosts Your Docker host on Windows is usually accessible either on the IP address 192.168.59.103 (older Docker versions) or 192.168.99.101 (newer Docker versions). As you can see, not so easy to remember.
You can add a new record to your etc/hosts file (in Windows) to create a local DNS name for your Docker VM (Boot2Docker), e.</description></item><item><title>10 Useful Docker Commands - Tips and Tricks</title><link>https://blog.pavelsklenar.com/10-useful-docker-commands-tip-tricks/</link><pubDate>Fri, 10 Jul 2015 00:00:00 +0000</pubDate><author>sklenar.pav@gmail.com</author><dc:creator>Pavel Sklenar</dc:creator><guid>https://blog.pavelsklenar.com/10-useful-docker-commands-tip-tricks/</guid><description>Set HTTP proxy in your Dockerfile Your Dockerfile usually starts most probably like this:
FROMtifayuki/java:8MAINTAINER...RUN apt-get update \ wget download.java.net/glassfish/4.0/release/glassfish-4.0.zip \ ...At first, you are apt-getting some missing applications and preparing your environment. Sometimes some applications need to be downloaded from the internet. You may encounter a problem when you are behind a proxy. Fortunately, you can use an [ENV](https://docs.docker.com/reference/builder/) command to set a HTTP/HTTPS proxy address, which will be in the environment of all &amp;ldquo;descendent&amp;rdquo; Dockerfile commands.</description></item></channel></rss>