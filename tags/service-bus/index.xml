<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>service-bus - Tag - blog.pavelsklenar.com</title><link>https://blog.pavelsklenar.com/tags/service-bus/</link><description>service-bus - Tag - blog.pavelsklenar.com</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sklenar.pav@gmail.com (Pavel Sklenar)</managingEditor><webMaster>sklenar.pav@gmail.com (Pavel Sklenar)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 22 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.pavelsklenar.com/tags/service-bus/" rel="self" type="application/rss+xml"/><item><title>Transfer data between two systems using Azure functions</title><link>https://blog.pavelsklenar.com/azure-functions-system-integration/</link><pubDate>Fri, 22 Oct 2021 00:00:00 +0000</pubDate><author>sklenar.pav@gmail.com</author><dc:creator>Pavel Sklenar</dc:creator><guid>https://blog.pavelsklenar.com/azure-functions-system-integration/</guid><description>Introduction This simple demo shows possible integration between two systems (system A and system B) using Azure Functions.
The architecture constraints:
All updates from the system A must be transfered into the system B The system A is listening on HTTP with REST API The system B is listening on HTTP with REST API The system B is not fully compatible in message definitions, so field mapping must be used The mapping must be saved in DB (I chose CosmosDB) Due to missing push notification in the system A, its API must be periodically checked The system B may be occasionally offline, so some type of persistent bus should be used.</description></item></channel></rss>