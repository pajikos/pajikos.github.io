<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>java - Tag - blog.pavelsklenar.com</title><link>https://blog.pavelsklenar.com/tags/java/</link><description>java - Tag - blog.pavelsklenar.com</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sklenar.pav@gmail.com (Pavel Sklenar)</managingEditor><webMaster>sklenar.pav@gmail.com (Pavel Sklenar)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 16 Dec 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.pavelsklenar.com/tags/java/" rel="self" type="application/rss+xml"/><item><title>Spring Boot: Run and Build in Docker</title><link>https://blog.pavelsklenar.com/spring-boot-run-and-build-in-docker/</link><pubDate>Sun, 16 Dec 2018 00:00:00 +0000</pubDate><author>sklenar.pav@gmail.com</author><dc:creator>Pavel Sklenar</dc:creator><guid>https://blog.pavelsklenar.com/spring-boot-run-and-build-in-docker/</guid><description>It exists many “Docker for Java developers” guides, but most of them does not take care of small and efficient Docker images.
I have combined many resources how to make a simple and fast Docker image containing any of Spring Boot like application.
My goals:
Create a single and portable Dockerfile (as general as possible). Make Maven build inside Docker (no need to have Maven locally). Don&amp;rsquo;t download any Maven dependencies repeatedly, if no changes in pom.</description></item></channel></rss>